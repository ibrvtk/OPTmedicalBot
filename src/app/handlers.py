from config import ADMINCHATS, ADMINUSERS, userData, shopName, shopDescription
import app.keyboards as kb

import aiosqlite

from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Message


handlers = Router()



@handlers.message(Command("start"), F.chat.type == "private")
async def cmdStart(message: Message):
    userData[message.from_user.id] = {
        'user_id': message.from_user.id,
        'inAssortment': "False",
        'assortmentCart': "None",
        'assortmentCount': 1,
        'assortmentCheque': 0,
        'assortmentChequeGlobal': 0,
    }

    await message.answer(f"üîµ <b><a href='https://t.me/+YvGo7Qxlz2I3MDg6'>OPT MEDICAL</a></b>{shopDescription}",
                            reply_markup=kb.chooseService)


# üìÑ –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç
@handlers.message(F.text == "üìÑ –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç")
async def fAssortment(message: Message):
    userData[message.from_user.id]['inAssortment'] = "True"
    await message.answer(f"{shopName}\n–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –æ–Ω–ª–∞–π–Ω –∑–∞–∫–∞–∑.",
                         reply_markup=await kb.assortmentProducts())


@handlers.message(F.text == "üõí –ö–æ—Ä–∑–∏–Ω–∞")
async def fAssortmentCart(message: Message):
    if userData[message.from_user.id]['assortmentCart'] == "None":
        await message.reply("üõí <b>–ö–æ—Ä–∑–∏–Ω–∞</b>\n<i>–ü—É—Å—Ç–æ...</i>")
    else:
        await message.reply(f"üõí <b>–ö–æ—Ä–∑–∏–Ω–∞</b>\n{userData[message.from_user.id]['assortmentCart']}\n"
                            f"<u>–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {userData[message.from_user.id]['assortmentChequeGlobal']} ‚ÇΩ</u>",
                            reply_markup=kb.cartKeyboard)
        
@handlers.message(F.text.contains("‚Äî") & F.text.contains("‚ÇΩ"))
async def fAssortmentProduct(message: Message):
    if userData[message.from_user.id]['inAssortment'] != "True":
        await message.reply("‚õî <b>–°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –¥–µ–π—Å—Ç–≤—É—é—â–∏–π –∑–∞–∫–∞–∑!</b>")
        return
    
    productName = message.text.split("‚Äî")[0].strip()
    async with aiosqlite.connect('databases/assortment.db') as db:
        async with db.execute("SELECT description, price, priceDiscount FROM assortment WHERE name = ?", (productName,)) as cursor:
            result = await cursor.fetchone()

    productDescription = result[0]
    productPrice = int(result[1])
    productPriceDiscount = int(result[2])
    productPriceDiscounted = productPrice - productPriceDiscount
    
    userData[message.from_user.id]['inAssortment'] = productName
    userData[message.from_user.id]['assortmentCheque'] = userData[message.from_user.id]['assortmentCount'] * productPriceDiscounted

    productPriceDiscountedText = f"{productPrice} ‚ÇΩ" if productPriceDiscount == 0 else f"<s>{productPrice}</s> {productPriceDiscounted} ‚ÇΩ"
    await message.reply(f"<b>{productName}</b>\n{productDescription}\n\n"
                        f"–¶–µ–Ω–∞ –∑–∞ —à—Ç—É–∫—É: {productPriceDiscountedText}\n"
                        f"–ö–æ–ª-–≤–æ: {userData[message.from_user.id]['assortmentCount']}\n"
                        f"–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞: {userData[message.from_user.id]['assortmentCheque']} ‚ÇΩ",
                        reply_markup=kb.assortmentPageButtons)


@handlers.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def fAssortmentBack(message: Message):
    userData[message.from_user.id]['inAssortment'] = "False"
    await message.answer(f"{shopName}{shopDescription}",
                         reply_markup=kb.chooseService)


# –ê–¥–º–∏–Ω—Å–∫–∏–π —Ä–∞–∑–¥–µ–ª
# /assortment
@handlers.message(Command("assortment"), (F.chat.id.in_(ADMINCHATS)) | (F.from_user.id.in_(ADMINUSERS)))
async def amdcmdPost(message: Message):
    await message.answer("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º.", 
                        reply_markup=kb.assortmentKeyboard)


# /posts
@handlers.message(Command("posts"), (F.chat.id.in_(ADMINCHATS)) | (F.from_user.id.in_(ADMINUSERS)))
async def amdcmdPost(message: Message):
    await message.answer("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –ø–æ—Å—Ç–∞–º–∏.", 
                        reply_markup=kb.postsKeyboard)