from config import kayboardPlaceholderChoose

import aiosqlite

from aiogram.types import (
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton
)
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder



chooseService = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="üìÑ –ó–∞–ø–∏—Å—å")],
    [KeyboardButton(text="üõí –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç")]
],
resize_keyboard=True,
input_field_placeholder=f"{kayboardPlaceholderChoose}")


# üõí –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç
async def serviceAssortment():
    keyboard = ReplyKeyboardBuilder()

    keyboard.add(KeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞"))
    keyboard.add(KeyboardButton(text="üîô –ù–∞–∑–∞–¥"))

    async with aiosqlite.connect('databases/assortment.db') as db:
        async with db.execute("SELECT name, price, priceDiscount FROM assortment") as cursor:
            products = await cursor.fetchall()

    for name, price, priceDiscount in products:
        priceDiscounted = price - priceDiscount
        if priceDiscount == 0:
            assortmentProductButtonText = f"{name} ‚Äî {price}‚ÇΩ/1—à—Ç."
        else:
            assortmentProductButtonText = f"{name} ‚Äî {priceDiscounted}‚ÇΩ/1—à—Ç. üî•"
        keyboard.add(KeyboardButton(text=f"{assortmentProductButtonText}"))

    return keyboard.adjust(2).as_markup(
        resize_keyboard=True,
        input_field_placeholder=kayboardPlaceholderChoose)

assortmentPageButtons = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üõí –í –∫–æ—Ä–∑–∏–Ω—É", callback_data="add")],
    [InlineKeyboardButton(text="‚ûï", callback_data="plus"), 
     InlineKeyboardButton(text="‚ûñ", callback_data="minus")]
])

assortmentCart = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üì¶ –ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é", callback_data="cartBuy"),
     InlineKeyboardButton(text="üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="cartClear")]
])


# –ê–¥–º–∏–Ω—Å–∫–∏–π —Ä–∞–∑–¥–µ–ª
# /assortment
assortmentKeyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç", callback_data="assortmentAdd"),
     InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤", callback_data="assortmentList")]
])

async def assortmentList():
    keyboard = InlineKeyboardBuilder()
    
    async with aiosqlite.connect('databases/assortment.db') as db:
        async with db.execute("SELECT number, name FROM assortment") as cursor:
            products = await cursor.fetchall()

    for number, name in products:
        keyboard.add(InlineKeyboardButton(text=f"{name}", callback_data=f"product_{number}"))

    return keyboard.adjust(2).as_markup()

def assortmentListActions_(productNumber: int):
    keyboard = InlineKeyboardBuilder()
    
    keyboard.add(InlineKeyboardButton(
        text="‚ùå –£–¥–∞–ª–∏—Ç—å", 
        callback_data=f"assortmentListActionsDelete_{productNumber}"
    ))
    keyboard.add(InlineKeyboardButton(
        text="üî• –î–æ–±–∞–≤–∏—Ç—å/—É–±—Ä–∞—Ç—å —Å–∫–∏–¥–∫—É", 
        callback_data=f"assortmentListActionsDiscount_{productNumber}"
    ))
    keyboard.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥", 
        callback_data="assortmentListActionsBack"
    ))
    
    return keyboard.adjust(3).as_markup()


# /posts
postsKeyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç", callback_data="postsAdd"),
     InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤", callback_data="postsList")]
])